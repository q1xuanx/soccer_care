// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Soccer_Care.Models;

#nullable disable

namespace Soccer_Care.Migrations
{
    [DbContext(typeof(SoccerCareDbContext))]
    partial class SoccerCareDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Soccer_Care.Models.BillModel", b =>
                {
                    b.Property<string>("IDBill")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDOrderDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("TotalPay")
                        .HasColumnType("real");

                    b.Property<float>("TotalTimeUse")
                        .HasColumnType("real");

                    b.HasKey("IDBill");

                    b.HasIndex("IDOrderDetails");

                    b.ToTable("BillSet");
                });

            modelBuilder.Entity("Soccer_Care.Models.DetailsOrderModel", b =>
                {
                    b.Property<string>("IDDetails")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("IDDetails");

                    b.HasIndex("IDOrder");

                    b.ToTable("DetailsOrder");
                });

            modelBuilder.Entity("Soccer_Care.Models.FieldLikeModel", b =>
                {
                    b.Property<string>("IDFieldLike")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDFootballField")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDFieldLike");

                    b.HasIndex("IDFootballField");

                    b.HasIndex("Username");

                    b.ToTable("FieldLike");
                });

            modelBuilder.Entity("Soccer_Care.Models.FootBallFieldModel", b =>
                {
                    b.Property<string>("IDFootBallField")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Gia")
                        .HasColumnType("real");

                    b.Property<string>("HinhAnhDaiDien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDFootBallField");

                    b.HasIndex("Username");

                    b.ToTable("FootBallFields");
                });

            modelBuilder.Entity("Soccer_Care.Models.HistoryOrderModel", b =>
                {
                    b.Property<string>("IDHistory")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDBill")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDHistory");

                    b.HasIndex("IDBill");

                    b.HasIndex("Username");

                    b.ToTable("HistoryOrders");
                });

            modelBuilder.Entity("Soccer_Care.Models.ListFieldModel", b =>
                {
                    b.Property<string>("IDField")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DescriptionField")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Gia")
                        .HasColumnType("real");

                    b.Property<string>("HinhAnhSanBong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDFootballField")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameField")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDField");

                    b.HasIndex("IDFootballField");

                    b.HasIndex("IDType");

                    b.ToTable("listFields");
                });

            modelBuilder.Entity("Soccer_Care.Models.OrderFieldModel", b =>
                {
                    b.Property<string>("IDOrder")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDFootballField")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDOrder");

                    b.HasIndex("IDFootballField");

                    b.HasIndex("Username");

                    b.ToTable("OrderField");
                });

            modelBuilder.Entity("Soccer_Care.Models.RatingModel", b =>
                {
                    b.Property<string>("IDDanhGia")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Diem")
                        .HasColumnType("int");

                    b.Property<string>("IDField")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDDanhGia");

                    b.HasIndex("IDField");

                    b.HasIndex("Username");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Soccer_Care.Models.RoleModel", b =>
                {
                    b.Property<string>("IDRole")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDRole");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Soccer_Care.Models.TypeFieldModel", b =>
                {
                    b.Property<string>("IDType")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDType");

                    b.ToTable("TypeFields");
                });

            modelBuilder.Entity("Soccer_Care.Models.UserModel", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AvatarURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IsBlock")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.HasIndex("IDRole");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Soccer_Care.Models.BillModel", b =>
                {
                    b.HasOne("Soccer_Care.Models.DetailsOrderModel", "DetailsOrder")
                        .WithMany()
                        .HasForeignKey("IDOrderDetails")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DetailsOrder");
                });

            modelBuilder.Entity("Soccer_Care.Models.DetailsOrderModel", b =>
                {
                    b.HasOne("Soccer_Care.Models.OrderFieldModel", "Order")
                        .WithMany()
                        .HasForeignKey("IDOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Soccer_Care.Models.FieldLikeModel", b =>
                {
                    b.HasOne("Soccer_Care.Models.FootBallFieldModel", "Football")
                        .WithMany()
                        .HasForeignKey("IDFootballField")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soccer_Care.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Football");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Soccer_Care.Models.FootBallFieldModel", b =>
                {
                    b.HasOne("Soccer_Care.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Soccer_Care.Models.HistoryOrderModel", b =>
                {
                    b.HasOne("Soccer_Care.Models.BillModel", "Bill")
                        .WithMany()
                        .HasForeignKey("IDBill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soccer_Care.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Soccer_Care.Models.ListFieldModel", b =>
                {
                    b.HasOne("Soccer_Care.Models.FootBallFieldModel", "FootBall")
                        .WithMany("ListField")
                        .HasForeignKey("IDFootballField")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soccer_Care.Models.TypeFieldModel", "Type")
                        .WithMany()
                        .HasForeignKey("IDType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FootBall");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Soccer_Care.Models.OrderFieldModel", b =>
                {
                    b.HasOne("Soccer_Care.Models.FootBallFieldModel", "FootBall")
                        .WithMany()
                        .HasForeignKey("IDFootballField")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soccer_Care.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FootBall");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Soccer_Care.Models.RatingModel", b =>
                {
                    b.HasOne("Soccer_Care.Models.FootBallFieldModel", "FootBall")
                        .WithMany()
                        .HasForeignKey("IDField")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soccer_Care.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FootBall");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Soccer_Care.Models.UserModel", b =>
                {
                    b.HasOne("Soccer_Care.Models.RoleModel", "Role")
                        .WithMany()
                        .HasForeignKey("IDRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Soccer_Care.Models.FootBallFieldModel", b =>
                {
                    b.Navigation("ListField");
                });
#pragma warning restore 612, 618
        }
    }
}
